name: PyPI Build and Upload

triggers:
  merge_request:
    target-branches: 
    - main
    - cicd_verify
    types:
    - merged


params:
  python-version:
    name: "Python Version"
    type: string
    required: false
    options:
      - "3.10"
      - "3.11"
      - "3.12"
    description: Python version for building PyPI package
    default: "3.10"
  
  repository-url:
    name: "Custom Repository URL"
    advanced: true
    type: string
    required: false
    default: "http://opsx.vip.tbsite.net/aliyun-pypi/simple/"
    description: "Upload repository URL, fill in when uploading to custom repository. Default upload to artlab"
  

jobs:
  pypi-build:
    image: alios-8u
    outputs:
      string-output: ${{steps.modify-version.outputs.env}}
    steps:
      - uses: checkout
      - uses: setup-env
        inputs:
          python-version: ${{params.python-version}}
      - id: rm-dist
        run: |
          cd python
          if [ -d "dist" ]; then
              rm -rf dist/
          fi
      - id: modify-version
        run: |
          cd python
          echo "Modifying version number and package name..."
          BASE_VERSION=$(grep "version = " pyproject.toml | head -n 1 | cut -d '"' -f 2)
          echo "BASE_VERSION=${BASE_VERSION}" > $AONE_CI_WORKSPACE/BASE_VERSION
          TIMESTAMP=$(TZ='Asia/Shanghai' date "+%Y%m%d%H%M%S")
          FINAL_VERSION="0.0.0.${TIMESTAMP}"
          echo "FINAL_VERSION=${FINAL_VERSION}" > $AONE_CI_WORKSPACE/FINAL_VERSION
          echo "${FINAL_VERSION}" > ${{outputs.env.path}}
          cat $AONE_CI_WORKSPACE/BASE_VERSION
          cat $AONE_CI_WORKSPACE/FINAL_VERSION
          sed -i "s/version = .*/version = \"${FINAL_VERSION}\"/" pyproject.toml
          sed -i 's/wuying-agentbay-sdk/wuying-agentbay-sdk-test/g' pyproject.toml
          cat pyproject.toml | grep name
          grep "version" pyproject.toml
      
      - id: pypi-install--build-publish
        run: | 
          cd python
          echo "Installing dependencies..."
          python -m pip install --upgrade pip
          pip install twine build poetry
          echo "Building PyPI package..."
          cat $AONE_CI_WORKSPACE/FINAL_VERSION
          # Check if build module can be imported
          echo $FINAL_VERSION_ENV
          python -c "import build; print('✅ Build module available, version:', build.__version__)" || (echo "❌ Build module import failed" && exit 1)
          # Build using poetry
          poetry build
          echo "Files to upload:"
          ls -la dist/
          echo "Uploading PyPI package..."
          twine --version
          twine upload --repository-url ${{params.repository-url}} --username ${{secrets.username}} --password ${{secrets.password}} dist/*
          echo "✅ Upload completed"
  summary:
    continue-on-error: true
    needs: [pypi-build]
    steps:
      - run: |
          echo "✅Source branch: ${{git.branch}}" >> $AONE_CI_SUMMARY
          echo "✅Installation command">> $AONE_CI_SUMMARY
          echo "pip install -i http://yum.tbsite.net/aliyun-pypi/simple/ --trusted-host yum.tbsite.net wuying-agentbay-sdk-test==${{jobs.pypi-build.outputs.string-output}}" >> $AONE_CI_SUMMARY
      - run: |
          echo "=========================================="
          echo "      Wuying AgentBay SDK Package Release Completed"
          echo "=========================================="
          cat $AONE_CI_SUMMARY 