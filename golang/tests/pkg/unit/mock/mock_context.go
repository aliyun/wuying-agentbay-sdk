// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aliyun/wuying-agentbay-sdk/golang/pkg/agentbay/interface (interfaces: ContextInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	agentbay "github.com/aliyun/wuying-agentbay-sdk/golang/pkg/agentbay"
	gomock "github.com/golang/mock/gomock"
)

// MockContextInterface is a mock of ContextInterface interface.
type MockContextInterface struct {
	ctrl     *gomock.Controller
	recorder *MockContextInterfaceMockRecorder
}

// MockContextInterfaceMockRecorder is the mock recorder for MockContextInterface.
type MockContextInterfaceMockRecorder struct {
	mock *MockContextInterface
}

// NewMockContextInterface creates a new mock instance.
func NewMockContextInterface(ctrl *gomock.Controller) *MockContextInterface {
	mock := &MockContextInterface{ctrl: ctrl}
	mock.recorder = &MockContextInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContextInterface) EXPECT() *MockContextInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockContextInterface) Create(arg0 string) (*agentbay.ContextCreateResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*agentbay.ContextCreateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockContextInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockContextInterface)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockContextInterface) Delete(arg0 *agentbay.Context) (*agentbay.ContextDeleteResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(*agentbay.ContextDeleteResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockContextInterfaceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockContextInterface)(nil).Delete), arg0)
}

// DeleteFile mocks base method.
func (m *MockContextInterface) DeleteFile(arg0, arg1 string) (*agentbay.ContextFileDeleteResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", arg0, arg1)
	ret0, _ := ret[0].(*agentbay.ContextFileDeleteResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockContextInterfaceMockRecorder) DeleteFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockContextInterface)(nil).DeleteFile), arg0, arg1)
}

// Get mocks base method.
func (m *MockContextInterface) Get(arg0 string, arg1 bool) (*agentbay.ContextResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*agentbay.ContextResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockContextInterfaceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockContextInterface)(nil).Get), arg0, arg1)
}

// GetFileDownloadUrl mocks base method.
func (m *MockContextInterface) GetFileDownloadUrl(arg0, arg1 string) (*agentbay.ContextFileUrlResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileDownloadUrl", arg0, arg1)
	ret0, _ := ret[0].(*agentbay.ContextFileUrlResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileDownloadUrl indicates an expected call of GetFileDownloadUrl.
func (mr *MockContextInterfaceMockRecorder) GetFileDownloadUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileDownloadUrl", reflect.TypeOf((*MockContextInterface)(nil).GetFileDownloadUrl), arg0, arg1)
}

// GetFileUploadUrl mocks base method.
func (m *MockContextInterface) GetFileUploadUrl(arg0, arg1 string) (*agentbay.ContextFileUrlResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileUploadUrl", arg0, arg1)
	ret0, _ := ret[0].(*agentbay.ContextFileUrlResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileUploadUrl indicates an expected call of GetFileUploadUrl.
func (mr *MockContextInterfaceMockRecorder) GetFileUploadUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileUploadUrl", reflect.TypeOf((*MockContextInterface)(nil).GetFileUploadUrl), arg0, arg1)
}

// List mocks base method.
func (m *MockContextInterface) List(arg0 *agentbay.ContextListParams) (*agentbay.ContextListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(*agentbay.ContextListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockContextInterfaceMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockContextInterface)(nil).List), arg0)
}

// ListFiles mocks base method.
func (m *MockContextInterface) ListFiles(arg0, arg1 string, arg2, arg3 int32) (*agentbay.ContextFileListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFiles", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*agentbay.ContextFileListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFiles indicates an expected call of ListFiles.
func (mr *MockContextInterfaceMockRecorder) ListFiles(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFiles", reflect.TypeOf((*MockContextInterface)(nil).ListFiles), arg0, arg1, arg2, arg3)
}

// Update mocks base method.
func (m *MockContextInterface) Update(arg0 *agentbay.Context) (*agentbay.ContextModifyResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(*agentbay.ContextModifyResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockContextInterfaceMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockContextInterface)(nil).Update), arg0)
}
