// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aliyun/wuying-agentbay-sdk/golang/pkg/agentbay/interface (interfaces: ConfigInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	agentbay "github.com/aliyun/wuying-agentbay-sdk/golang/pkg/agentbay"
	gomock "github.com/golang/mock/gomock"
)

// MockConfigInterface is a mock of ConfigInterface interface.
type MockConfigInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigInterfaceMockRecorder
}

// MockConfigInterfaceMockRecorder is the mock recorder for MockConfigInterface.
type MockConfigInterfaceMockRecorder struct {
	mock *MockConfigInterface
}

// NewMockConfigInterface creates a new mock instance.
func NewMockConfigInterface(ctrl *gomock.Controller) *MockConfigInterface {
	mock := &MockConfigInterface{ctrl: ctrl}
	mock.recorder = &MockConfigInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigInterface) EXPECT() *MockConfigInterfaceMockRecorder {
	return m.recorder
}

// DefaultConfig mocks base method.
func (m *MockConfigInterface) DefaultConfig() agentbay.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DefaultConfig")
	ret0, _ := ret[0].(agentbay.Config)
	return ret0
}

// DefaultConfig indicates an expected call of DefaultConfig.
func (mr *MockConfigInterfaceMockRecorder) DefaultConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DefaultConfig", reflect.TypeOf((*MockConfigInterface)(nil).DefaultConfig))
}

// LoadConfig mocks base method.
func (m *MockConfigInterface) LoadConfig(arg0 *agentbay.Config) agentbay.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadConfig", arg0)
	ret0, _ := ret[0].(agentbay.Config)
	return ret0
}

// LoadConfig indicates an expected call of LoadConfig.
func (mr *MockConfigInterfaceMockRecorder) LoadConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadConfig", reflect.TypeOf((*MockConfigInterface)(nil).LoadConfig), arg0)
}
