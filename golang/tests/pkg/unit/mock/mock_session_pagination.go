// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aliyun/wuying-agentbay-sdk/golang/pkg/agentbay/interface (interfaces: SessionPaginationInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	agentbay "github.com/aliyun/wuying-agentbay-sdk/golang/pkg/agentbay"
	gomock "github.com/golang/mock/gomock"
)

// MockSessionPaginationInterface is a mock of SessionPaginationInterface interface.
type MockSessionPaginationInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSessionPaginationInterfaceMockRecorder
}

// MockSessionPaginationInterfaceMockRecorder is the mock recorder for MockSessionPaginationInterface.
type MockSessionPaginationInterfaceMockRecorder struct {
	mock *MockSessionPaginationInterface
}

// NewMockSessionPaginationInterface creates a new mock instance.
func NewMockSessionPaginationInterface(ctrl *gomock.Controller) *MockSessionPaginationInterface {
	mock := &MockSessionPaginationInterface{ctrl: ctrl}
	mock.recorder = &MockSessionPaginationInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionPaginationInterface) EXPECT() *MockSessionPaginationInterfaceMockRecorder {
	return m.recorder
}

// ListByLabels mocks base method.
func (m *MockSessionPaginationInterface) ListByLabels(arg0 map[string]string, arg1 int32, arg2 string) (*agentbay.SessionListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByLabels", arg0, arg1, arg2)
	ret0, _ := ret[0].(*agentbay.SessionListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByLabels indicates an expected call of ListByLabels.
func (mr *MockSessionPaginationInterfaceMockRecorder) ListByLabels(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByLabels", reflect.TypeOf((*MockSessionPaginationInterface)(nil).ListByLabels), arg0, arg1, arg2)
}
